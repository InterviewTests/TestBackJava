# ===============================
# = DADOS DA APLICACAO
# ===============================
# Setamos aqui configuracao para a porta e path da aplicacao
server.port = 8999
server.servlet.context-path=/testbackjava/


# ===============================
# = ARMAZENAMENTO DE DADOS: CASSANDRA
# ===============================
# Setamos aqui configuracao para a conexacao com banco
spring.data.cassandra.keyspace-name=gastocartao_keyspace
spring.data.cassandra.contact-points=localhost
spring.data.cassandra.port=9042
spring.data.cassandra.schema-action=create_if_not_exists


# ===============================
# = KAFKA CONFIGURACAO
# ===============================
#Producer
#endereco kafka definido docker-compose.yml
spring.kafka.producer.bootstrap-servers=http://localhost:29092
#nome do topico que foi criado
testbackjava.topic=testbackjava-topic

#Consumer definido resources/kafka/docker-compose.yml
spring.kafka.consumer.bootstrap-servers=http://localhost:29092
spring.kafka.consumer.group-id=group-id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties.spring.json.trusted.packages=br.com.santander.testbackjava.model.dto
spring.kafka.consumer.properties.spring.deserializer.key.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.properties.spring.deserializer.value.delegate.class=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.properties.spring.json.add.type.headers=false
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

#Mensagens tipadas
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
#spring.kafka.producer.properties.spring.json.add.type.headers=false


      